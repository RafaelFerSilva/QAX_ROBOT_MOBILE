"use strict";
// transpile:main
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const yargs_1 = __importDefault(require("yargs"));
const factory_1 = __importDefault(require("../lib/factory"));
const utils_1 = require("../lib/utils");
const prompt_1 = require("../lib/prompt");
const support_1 = require("@appium/support");
yargs_1.default
    .strict()
    .usage('Usage: $0 [options, defaults: --ios --android]')
    .boolean('ios')
    .describe('ios', 'Check iOS setup')
    .boolean('android')
    .describe('android', 'Check Android setup')
    .boolean('dev')
    .describe('dev', 'Check dev setup')
    .boolean('debug')
    .describe('debug', 'Show debug messages')
    .boolean('yes')
    .describe('yes', 'Always respond yes')
    .boolean('no')
    .describe('no', 'Always respond no')
    .boolean('demo')
    .describe('demo', 'Run appium-doctor demo (for dev).')
    .help('h')
    .alias('h', 'help')
    .check(function (argv) {
    if (!argv.ios && !argv.android && !argv.demo) {
        argv.ios = support_1.system.isMac();
        argv.android = true;
    }
    return true;
});
// make sure we use the general checks for every test
let opts = Object.assign({
    general: true,
}, yargs_1.default.argv);
(0, prompt_1.configure)(opts);
(0, utils_1.configureBinaryLog)(opts);
(0, factory_1.default)(opts)
    .run()
    .catch(function (e) {
    console.error(e); // eslint-disable-line no-console
    process.exit(1);
});
//# sourceMappingURL=appium-doctor.js.map