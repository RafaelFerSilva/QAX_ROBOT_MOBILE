"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_1 = __importDefault(require("lodash"));
const doctor_1 = require("./doctor");
const general_1 = __importDefault(require("./general"));
const ios_1 = __importDefault(require("./ios"));
const android_1 = __importDefault(require("./android"));
const dev_1 = __importDefault(require("./dev"));
const demo_1 = __importDefault(require("./demo"));
/**
 * @type {DoctorGroup}
 */
let checks = { generalChecks: general_1.default, iosChecks: ios_1.default, androidChecks: android_1.default, devChecks: dev_1.default, demoChecks: demo_1.default };
let newDoctor = (opts) => {
    let doctor = new doctor_1.Doctor();
    for (let [k, v] of lodash_1.default.toPairs(opts)) {
        if (v) {
            doctor.register(checks[`${k}Checks`] || []);
        }
    }
    return doctor;
};
exports.default = newDoctor;
/**
 * @typedef {import('./doctor').DoctorCheck[]} DoctorCheckList
 */
/**
 * @typedef DoctorGroup - Contain a group of Doctors
 * @property {DoctorCheckList} generalChecks - Check AppiumHome, NodeBinary, NodeVersion, ffmpeg, mjpeg-consumer
 * @property {DoctorCheckList} iosChecks - Check if iOS toolchains are installed
 * @property {DoctorCheckList} androidChecks - Check if Android toolchains are installed
 * @property {DoctorCheckList} devChecks - Check Path Binary and Android SDKs
 * @property {DoctorCheckList} demoChecks - Check /tmp/appium-doctor/demo/*
 */
//# sourceMappingURL=factory.js.map