export default checks;
export type UtilsResult = import('./utils').UtilsResult;
export class AppiumHomeCheck extends DoctorCheck {
    /**
     *
     * @returns {UtilsResult}
     */
    diagnose(): UtilsResult;
}
export class NodeBinaryCheck extends DoctorCheck {
    diagnose(): Promise<import("./utils").UtilsResult>;
    fix(): string;
}
export class NodeVersionCheck extends DoctorCheck {
    diagnose(): Promise<import("./utils").UtilsResult>;
    fix(): string;
}
export class OptionalFfmpegCommandCheck extends DoctorCheck {
    /**
     *
     * @returns {Promise<UtilsResult>}
     */
    diagnose(): Promise<UtilsResult>;
    /**
     *
     * @returns {string}
     */
    fix(): string;
}
export class OptionalMjpegConsumerCommandCheck extends DoctorCheck {
    diagnose(): Promise<import("./utils").UtilsResult>;
    fix(): Promise<string>;
}
/**
 * @type {import('./factory').DoctorCheckList}
 */
declare let checks: import('./factory').DoctorCheckList;
import { DoctorCheck } from './doctor';
//# sourceMappingURL=general.d.ts.map