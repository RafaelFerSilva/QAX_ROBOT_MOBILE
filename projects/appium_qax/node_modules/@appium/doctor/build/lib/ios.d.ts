export default checks;
export let fixes: {};
export class XcodeCheck extends DoctorCheck {
    diagnose(): Promise<import("./utils").UtilsResult>;
    fix(): Promise<string>;
}
export class XcodeCmdLineToolsCheck extends DoctorCheck {
    constructor();
    diagnose(): Promise<import("./utils").UtilsResult>;
    fix(): Promise<void>;
}
export class DevToolsSecurityCheck extends DoctorCheck {
    diagnose(): Promise<import("./utils").UtilsResult>;
}
export class OptionalIdbCommandCheck extends DoctorCheck {
    diagnose(): Promise<import("./utils").UtilsResult>;
    fix(): Promise<string>;
}
export namespace OptionalIdbCommandCheck {
    const idbReadmeURL: string;
}
export class OptionalApplesimutilsCommandCheck extends DoctorCheck {
    diagnose(): Promise<import("./utils").UtilsResult>;
    fix(): Promise<string>;
}
export class OptionalIOSDeployCommandCheck extends DoctorCheck {
    diagnose(): Promise<import("./utils").UtilsResult>;
    fix(): Promise<string>;
}
export class OptionalLyftCommandCheck extends DoctorCheck {
    diagnose(): Promise<import("./utils").UtilsResult>;
    fix(): Promise<string>;
}
/**
 * @type {import('./factory').DoctorCheckList}
 */
declare let checks: import('./factory').DoctorCheckList;
import { DoctorCheck } from './doctor';
//# sourceMappingURL=ios.d.ts.map