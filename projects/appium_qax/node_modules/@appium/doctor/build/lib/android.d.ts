export default checks;
import EnvVarAndPathCheck from './env';
export class AndroidToolCheck extends DoctorCheck {
    constructor();
    tools: string[];
    noBinaries: any[];
    diagnose(): Promise<import("./utils").UtilsResult>;
    fix(): string;
}
export class JavaOnPathCheck extends DoctorCheck {
    diagnose(): Promise<import("./utils").UtilsResult>;
    fix(): string;
}
export class OptionalAppBundleCheck extends DoctorCheck {
    diagnose(): Promise<import("./utils").UtilsResult>;
    fix(): Promise<string>;
}
export class OptionalGstreamerCheck extends DoctorCheck {
    GSTREAMER_BINARY: string;
    GST_INSPECT_BINARY: string;
    diagnose(): Promise<import("./utils").UtilsResult>;
    fix(): Promise<string>;
}
/**
 * @type {import('./factory').DoctorCheckList}
 */
declare let checks: import('./factory').DoctorCheckList;
import { DoctorCheck } from './doctor';
export { EnvVarAndPathCheck };
//# sourceMappingURL=android.d.ts.map